/*
 * This file is generated by jOOQ.
 */
package com.pip.chatbot.jooq.food.tables;


import com.pip.chatbot.jooq.food.Food;
import com.pip.chatbot.jooq.food.Keys;
import com.pip.chatbot.jooq.food.tables.records.MenuRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Menu extends TableImpl<MenuRecord> {

    private static final long serialVersionUID = 1897913914;

    /**
     * The reference instance of <code>food.menu</code>
     */
    public static final Menu MENU = new Menu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MenuRecord> getRecordType() {
        return MenuRecord.class;
    }

    /**
     * The column <code>food.menu.id</code>.
     */
    public final TableField<MenuRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('food.menu_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>food.menu.restaurant_id</code>.
     */
    public final TableField<MenuRecord, Integer> RESTAURANT_ID = createField(DSL.name("restaurant_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('food.menu_restaurant_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>food.menu.start_date</code>.
     */
    public final TableField<MenuRecord, LocalDateTime> START_DATE = createField(DSL.name("start_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>food.menu.end_date</code>.
     */
    public final TableField<MenuRecord, LocalDateTime> END_DATE = createField(DSL.name("end_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>food.menu</code> table reference
     */
    public Menu() {
        this(DSL.name("menu"), null);
    }

    /**
     * Create an aliased <code>food.menu</code> table reference
     */
    public Menu(String alias) {
        this(DSL.name(alias), MENU);
    }

    /**
     * Create an aliased <code>food.menu</code> table reference
     */
    public Menu(Name alias) {
        this(alias, MENU);
    }

    private Menu(Name alias, Table<MenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private Menu(Name alias, Table<MenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Menu(Table<O> child, ForeignKey<O, MenuRecord> key) {
        super(child, key, MENU);
    }

    @Override
    public Schema getSchema() {
        return Food.FOOD;
    }

    @Override
    public Identity<MenuRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MENU;
    }

    @Override
    public UniqueKey<MenuRecord> getPrimaryKey() {
        return Keys.MENU_PKEY;
    }

    @Override
    public List<UniqueKey<MenuRecord>> getKeys() {
        return Arrays.<UniqueKey<MenuRecord>>asList(Keys.MENU_PKEY);
    }

    @Override
    public List<ForeignKey<MenuRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MenuRecord, ?>>asList(Keys.MENU__MENU_RESTAURANT_ID_FKEY);
    }

    public Restaurant restaurant() {
        return new Restaurant(this, Keys.MENU__MENU_RESTAURANT_ID_FKEY);
    }

    @Override
    public Menu as(String alias) {
        return new Menu(DSL.name(alias), this);
    }

    @Override
    public Menu as(Name alias) {
        return new Menu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Menu rename(String name) {
        return new Menu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Menu rename(Name name) {
        return new Menu(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
