/*
 * This file is generated by jOOQ.
 */
package com.pip.chatbot.jooq.food.tables.records;


import com.pip.chatbot.jooq.food.tables.Cuisine;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CuisineRecord extends UpdatableRecordImpl<CuisineRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -370704314;

    /**
     * Setter for <code>food.cuisine.cuisine_id</code>.
     */
    public void setCuisineId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>food.cuisine.cuisine_id</code>.
     */
    public Integer getCuisineId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>food.cuisine.cuisine_name</code>.
     */
    public void setCuisineName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>food.cuisine.cuisine_name</code>.
     */
    public String getCuisineName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Cuisine.CUISINE.CUISINE_ID;
    }

    @Override
    public Field<String> field2() {
        return Cuisine.CUISINE.CUISINE_NAME;
    }

    @Override
    public Integer component1() {
        return getCuisineId();
    }

    @Override
    public String component2() {
        return getCuisineName();
    }

    @Override
    public Integer value1() {
        return getCuisineId();
    }

    @Override
    public String value2() {
        return getCuisineName();
    }

    @Override
    public CuisineRecord value1(Integer value) {
        setCuisineId(value);
        return this;
    }

    @Override
    public CuisineRecord value2(String value) {
        setCuisineName(value);
        return this;
    }

    @Override
    public CuisineRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CuisineRecord
     */
    public CuisineRecord() {
        super(Cuisine.CUISINE);
    }

    /**
     * Create a detached, initialised CuisineRecord
     */
    public CuisineRecord(Integer cuisineId, String cuisineName) {
        super(Cuisine.CUISINE);

        set(0, cuisineId);
        set(1, cuisineName);
    }
}
