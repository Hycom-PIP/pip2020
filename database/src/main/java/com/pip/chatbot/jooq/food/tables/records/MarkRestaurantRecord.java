/*
 * This file is generated by jOOQ.
 */
package com.pip.chatbot.jooq.food.tables.records;


import com.pip.chatbot.jooq.food.tables.MarkRestaurant;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarkRestaurantRecord extends UpdatableRecordImpl<MarkRestaurantRecord> implements Record3<Integer, Integer, Float> {

    private static final long serialVersionUID = 881737689;

    /**
     * Setter for <code>food.mark_restaurant.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>food.mark_restaurant.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>food.mark_restaurant.restaurant_id</code>.
     */
    public void setRestaurantId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>food.mark_restaurant.restaurant_id</code>.
     */
    public Integer getRestaurantId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>food.mark_restaurant.mark</code>.
     */
    public void setMark(Float value) {
        set(2, value);
    }

    /**
     * Getter for <code>food.mark_restaurant.mark</code>.
     */
    public Float getMark() {
        return (Float) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Float> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Float> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MarkRestaurant.MARK_RESTAURANT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return MarkRestaurant.MARK_RESTAURANT.RESTAURANT_ID;
    }

    @Override
    public Field<Float> field3() {
        return MarkRestaurant.MARK_RESTAURANT.MARK;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getRestaurantId();
    }

    @Override
    public Float component3() {
        return getMark();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getRestaurantId();
    }

    @Override
    public Float value3() {
        return getMark();
    }

    @Override
    public MarkRestaurantRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MarkRestaurantRecord value2(Integer value) {
        setRestaurantId(value);
        return this;
    }

    @Override
    public MarkRestaurantRecord value3(Float value) {
        setMark(value);
        return this;
    }

    @Override
    public MarkRestaurantRecord values(Integer value1, Integer value2, Float value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MarkRestaurantRecord
     */
    public MarkRestaurantRecord() {
        super(MarkRestaurant.MARK_RESTAURANT);
    }

    /**
     * Create a detached, initialised MarkRestaurantRecord
     */
    public MarkRestaurantRecord(Integer id, Integer restaurantId, Float mark) {
        super(MarkRestaurant.MARK_RESTAURANT);

        set(0, id);
        set(1, restaurantId);
        set(2, mark);
    }
}
