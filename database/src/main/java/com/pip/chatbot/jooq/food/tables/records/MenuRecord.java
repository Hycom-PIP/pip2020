/*
 * This file is generated by jOOQ.
 */
package com.pip.chatbot.jooq.food.tables.records;


import com.pip.chatbot.jooq.food.tables.Menu;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuRecord extends UpdatableRecordImpl<MenuRecord> implements Record4<Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1600607325;

    /**
     * Setter for <code>food.menu.menu_id</code>.
     */
    public void setMenuId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>food.menu.menu_id</code>.
     */
    public Integer getMenuId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>food.menu.restaurant_id</code>.
     */
    public void setRestaurantId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>food.menu.restaurant_id</code>.
     */
    public Integer getRestaurantId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>food.menu.start_date</code>.
     */
    public void setStartDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>food.menu.start_date</code>.
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>food.menu.end_date</code>.
     */
    public void setEndDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>food.menu.end_date</code>.
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Menu.MENU.MENU_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Menu.MENU.RESTAURANT_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Menu.MENU.START_DATE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Menu.MENU.END_DATE;
    }

    @Override
    public Integer component1() {
        return getMenuId();
    }

    @Override
    public Integer component2() {
        return getRestaurantId();
    }

    @Override
    public LocalDateTime component3() {
        return getStartDate();
    }

    @Override
    public LocalDateTime component4() {
        return getEndDate();
    }

    @Override
    public Integer value1() {
        return getMenuId();
    }

    @Override
    public Integer value2() {
        return getRestaurantId();
    }

    @Override
    public LocalDateTime value3() {
        return getStartDate();
    }

    @Override
    public LocalDateTime value4() {
        return getEndDate();
    }

    @Override
    public MenuRecord value1(Integer value) {
        setMenuId(value);
        return this;
    }

    @Override
    public MenuRecord value2(Integer value) {
        setRestaurantId(value);
        return this;
    }

    @Override
    public MenuRecord value3(LocalDateTime value) {
        setStartDate(value);
        return this;
    }

    @Override
    public MenuRecord value4(LocalDateTime value) {
        setEndDate(value);
        return this;
    }

    @Override
    public MenuRecord values(Integer value1, Integer value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MenuRecord
     */
    public MenuRecord() {
        super(Menu.MENU);
    }

    /**
     * Create a detached, initialised MenuRecord
     */
    public MenuRecord(Integer menuId, Integer restaurantId, LocalDateTime startDate, LocalDateTime endDate) {
        super(Menu.MENU);

        set(0, menuId);
        set(1, restaurantId);
        set(2, startDate);
        set(3, endDate);
    }
}
