/*
 * This file is generated by jOOQ.
 */
package com.pip.chatbot.jooq.food.tables.records;


import com.pip.chatbot.jooq.food.tables.RestaurantCuisine;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RestaurantCuisineRecord extends UpdatableRecordImpl<RestaurantCuisineRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -698446095;

    /**
     * Setter for <code>food.restaurant_cuisine.restaurant_id</code>.
     */
    public void setRestaurantId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>food.restaurant_cuisine.restaurant_id</code>.
     */
    public Integer getRestaurantId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>food.restaurant_cuisine.cuisine</code>.
     */
    public void setCuisine(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>food.restaurant_cuisine.cuisine</code>.
     */
    public String getCuisine() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RestaurantCuisine.RESTAURANT_CUISINE.RESTAURANT_ID;
    }

    @Override
    public Field<String> field2() {
        return RestaurantCuisine.RESTAURANT_CUISINE.CUISINE;
    }

    @Override
    public Integer component1() {
        return getRestaurantId();
    }

    @Override
    public String component2() {
        return getCuisine();
    }

    @Override
    public Integer value1() {
        return getRestaurantId();
    }

    @Override
    public String value2() {
        return getCuisine();
    }

    @Override
    public RestaurantCuisineRecord value1(Integer value) {
        setRestaurantId(value);
        return this;
    }

    @Override
    public RestaurantCuisineRecord value2(String value) {
        setCuisine(value);
        return this;
    }

    @Override
    public RestaurantCuisineRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RestaurantCuisineRecord
     */
    public RestaurantCuisineRecord() {
        super(RestaurantCuisine.RESTAURANT_CUISINE);
    }

    /**
     * Create a detached, initialised RestaurantCuisineRecord
     */
    public RestaurantCuisineRecord(Integer restaurantId, String cuisine) {
        super(RestaurantCuisine.RESTAURANT_CUISINE);

        set(0, restaurantId);
        set(1, cuisine);
    }
}
