/*
 * This file is generated by jOOQ.
 */
package com.pip.chatbot.jooq.fortune;


import com.pip.chatbot.jooq.fortune.tables.Stock;
import com.pip.chatbot.jooq.fortune.tables.Symbol;
import com.pip.chatbot.jooq.fortune.tables.records.StockRecord;
import com.pip.chatbot.jooq.fortune.tables.records.SymbolRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>fortune</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<StockRecord, Long> IDENTITY_STOCK = Identities0.IDENTITY_STOCK;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<StockRecord> STOCK_PKEY = UniqueKeys0.STOCK_PKEY;
    public static final UniqueKey<SymbolRecord> SYMBOL_PKEY = UniqueKeys0.SYMBOL_PKEY;
    public static final UniqueKey<SymbolRecord> SYMBOL_NAME_KEY = UniqueKeys0.SYMBOL_NAME_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<StockRecord, SymbolRecord> STOCK__STOCK_SYMBOL_FKEY = ForeignKeys0.STOCK__STOCK_SYMBOL_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<StockRecord, Long> IDENTITY_STOCK = Internal.createIdentity(Stock.STOCK, Stock.STOCK.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<StockRecord> STOCK_PKEY = Internal.createUniqueKey(Stock.STOCK, "stock_pkey", new TableField[] { Stock.STOCK.ID }, true);
        public static final UniqueKey<SymbolRecord> SYMBOL_PKEY = Internal.createUniqueKey(Symbol.SYMBOL, "symbol_pkey", new TableField[] { Symbol.SYMBOL.SYMBOL_ }, true);
        public static final UniqueKey<SymbolRecord> SYMBOL_NAME_KEY = Internal.createUniqueKey(Symbol.SYMBOL, "symbol_name_key", new TableField[] { Symbol.SYMBOL.NAME }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<StockRecord, SymbolRecord> STOCK__STOCK_SYMBOL_FKEY = Internal.createForeignKey(Keys.SYMBOL_PKEY, Stock.STOCK, "stock_symbol_fkey", new TableField[] { Stock.STOCK.SYMBOL }, true);
    }
}
