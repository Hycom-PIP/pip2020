/*
 * This file is generated by jOOQ.
 */
package com.pip.chatbot.jooq.jokes.tables.records;


import com.pip.chatbot.jooq.jokes.tables.Category;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryRecord extends UpdatableRecordImpl<CategoryRecord> implements Record2<String, Boolean> {

    private static final long serialVersionUID = 954962939;

    /**
     * Setter for <code>jokes.category.category</code>.
     */
    public void setCategory(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>jokes.category.category</code>.
     */
    public String getCategory() {
        return (String) get(0);
    }

    /**
     * Setter for <code>jokes.category.is_confirmed</code>.
     */
    public void setIsConfirmed(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>jokes.category.is_confirmed</code>.
     */
    public Boolean getIsConfirmed() {
        return (Boolean) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Boolean> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Boolean> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Category.CATEGORY.CATEGORY_;
    }

    @Override
    public Field<Boolean> field2() {
        return Category.CATEGORY.IS_CONFIRMED;
    }

    @Override
    public String component1() {
        return getCategory();
    }

    @Override
    public Boolean component2() {
        return getIsConfirmed();
    }

    @Override
    public String value1() {
        return getCategory();
    }

    @Override
    public Boolean value2() {
        return getIsConfirmed();
    }

    @Override
    public CategoryRecord value1(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public CategoryRecord value2(Boolean value) {
        setIsConfirmed(value);
        return this;
    }

    @Override
    public CategoryRecord values(String value1, Boolean value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryRecord
     */
    public CategoryRecord() {
        super(Category.CATEGORY);
    }

    /**
     * Create a detached, initialised CategoryRecord
     */
    public CategoryRecord(String category, Boolean isConfirmed) {
        super(Category.CATEGORY);

        set(0, category);
        set(1, isConfirmed);
    }
}
